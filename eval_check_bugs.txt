EVAL CHECK 

No refactoring if not absolutely necessary! Go through checklist first.


COMPILER WARNINGS

execution/handle_exec_cmd.c:26:10: warning: incompatible pointer types passing 'char *[100]' to parameter of type 't_exec *' (aka 'struct s_exec *') [-Wincompatible-pointer-types]
                        ft_cd(exec_cmd->argv, head, info);
                              ^~~~~~~~~~~~~~
execution/../minishell_tree.h:152:20: note: passing argument to parameter 'exec_cmd' here
void    ft_cd(t_exec *exec_cmd, t_env **head, t_info **info);
                      ^
execution/handle_exec_cmd.c:39:13: warning: incompatible pointer types passing 'char *[100]' to parameter of type 't_exec *' (aka 'struct s_exec *') [-Wincompatible-pointer-types]
                ft_export(exec_cmd->argv, head, info);
                          ^~~~~~~~~~~~~~
execution/../minishell_tree.h:161:27: note: passing argument to parameter 'exec_cmd' here
void    ft_export(t_exec *exec_cmd, t_env **head, t_info **info);

ZH: parsing/get_token.c:33:2: warning: misleading indentation; statement is not part of the previous 'if' [-Wmisleading-indentation]
        if (*current_pos == '\'') // if changed to else if, nothing works. will fix when splitting the function



- Set the $PATH to a multiple directory value (directory1:directory2)
	and ensure that directories are checked in order from left to right.
	- I have no idea how to test this?
	
- env expansion: 
	it now prints the full line from env,
	it should only print the variable, not the label:
	
	minishell> echo "hello $USER, this is your home: $HOME"
	output: hello USER=zhedlund, this is your home: HOME=/home/zhedlund
	expected: hello zhedlund, this is your home: /home/zhedlund
	
- unset: 
	- no error message
	- exit code: 0, should be 1(?)
	
- cd:	"cd .." exits minishell	

	wrong error msg + exit code:
	minishell> cd nonexistingdir
	chdir: No such file or directory
	expected:
	minishell: cd: nonexistingdir : No such file or directory
	exit code should be 1? 
	
- echo
	
	minishell> echo -n -n -nnnn -nnnnm
	-n -nnnn -nnnnmminishell>
	should be: -nnnnmminishell>

- Ctrl+D: if used to exit, gives exit code 130, should be 0
	exit code 0 after blocking cmd (correct)

- Ctrl+C: if used after blocking cmd like cat:
	  exit code: 0, should be 130
	  
	  if used on empty line:
	  exit code: 0, should be 130
	  
	  if used after writing something:
		minishell> echo hey ^C
		exit code 0, should be 130
	  
ZH - echo / quotes:
	minishell> echo ""abc""  
	output: abc""
	expected: abc
	error in ft_echo or in parser?
	  
FIXED ZH - 	unmatched quotes: minishell> echo "hello '''" / echo 'hello """'
	unmatched quote
	should be: hello ''' / hello """

FIXED ZH - "" 	should print "Error", exit(127)
	now prints nothing, exit 0
	
FIXED ZH - command with only space/tabs: 
	- in bash commands works even with leading whitespace
	we should check full line - FIXED
